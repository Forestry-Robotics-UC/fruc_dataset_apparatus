version: "3"

services:
  #Create a container for the ROS master
  ros-master:
    image: mjpc13/ros:noetic-core
    env_file: .env
    environment:
      - NGROK_TOKEN=$NGROK_TOKEN
    network_mode: "host"
    command: roscore
    
  #Create the Melodic Container (required by Mynt Eye)
  ros-melodic:
    build:
      context: .
      dockerfile: melodic.Dockerfile
    depends_on:
      - ros-master
    privileged: true
    #Mount the src/ folder inside the docker container
    volumes:
        - type: bind
          source: ../catkin_ws/src
          target: /root/catkin_ws/src
    network_mode: "host"
    environment:
        - SETUP=/root/catkin_ws/devel/setup.bash
        - BUILDLIST= sensor-tools xsens_driver
        - ROSPACKAGE=sensor-tools
        - LAUNCHFILE=apparatus-melodic.launch
        - XSENS_MODE=sotac #Paramenters related to configuration of Xsens MTi Legacy
        - XSENS_SETTINGS=tqMAG #Paramenters related to configuration of Xsens MTi Legacy
    command: ./melodic-launch.sh
  
  ##Create the Noetic Container
  ros-noetic:
    build:
      context: .
      dockerfile: noetic.Dockerfile
    depends_on:
      - ros-master
    privileged: true
    volumes:
        - type: bind
          source: ../catkin_ws/src
          target: /root/catkin_ws/src
    network_mode: "host"
    environment:
        - SETUP=/root/catkin_ws/devel/setup.bash
        - BUILDLIST= sensor-tools livox_ros_driver realsense2_camera #Only this packages will be build
        - ROSPACKAGE=sensor-tools #rospackage of the desired launchfile
        - LAUNCHFILE=apparatus-noetic.launch #launchfile to be launch after compilation
    command: ./noetic-launch.sh
  
  #Ros bridge container ( creates a websocket server to connect Android devices)
  ros-bridge:
    image: mjpc13/ros:noetic-base
    depends_on:
      - ros-master
    network_mode: "host"
    ports: #Exposes the 9090 port to the host computer, so it can be reached from external devices
      - "9090:9090" 
    environment:
        - SETUP=/root/catkin_ws/devel/setup.bash
    command: roslaunch --wait rosbridge_server rosbridge_websocket.launch    

    #  record:
    #image: ros:noetic-ros-core
    #depends_on: 
    #  - ros-master
    #volumes:
    #    - type: bind
    #      source: ../rosbags
    #      target: /rosbags/
    #networks:
    #  ros:
    #    ipv4_address: 172.26.0.6
    #environment:
    #    - "ROS_MASTER_URI=http://ros-master:11311"
    #    - "ROS_IP=172.26.0.6"
    #command: rosbag record -a --split --duration=10 -O /rosbags/battery_test.bag
  
  #Vizualization Container
  viz:
    image: osrf/ros:kinetic-desktop-full
    container_name: ros_visualizer
    depends_on:
      - ros-master
    network_mode: "host"
    environment:
      - "DISPLAY"
      - "QT_X11_NO_MITSHM=1" #fix some QT bugs
    user: 1000:1000 #adapt as needed!
    env_file: .env
    volumes: 
      #share your x11 socket and permissions to the container
      - /tmp/.X11-unix:/tmp/.X11-unix:rw
      - /etc/group:/etc/group:ro
      - /etc/passwd:/etc/passwd:ro
      - /etc/shadow:/etc/shadow:ro
      - /etc/sudoers:/etc/sudoers:ro
      - /etc/sudoers.d:/etc/sudoers.d:ro
      - /home/$USER:/home/$USER:rw #share your home with write permissions
      - ../rviz:/rviz/:ro #Pass the Rviz config files
    command: rqt
